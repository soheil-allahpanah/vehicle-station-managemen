drop table if exists companies;

CREATE TABLE public.companies (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	identification_number varchar(256) NOT NULL,
	company_name varchar(256) NOT NULL,
	parent_id int8 NULL,
	created_at timestamp NOT NULL,
	updated_at timestamp NOT NULL,
	CONSTRAINT companies_company_name_key UNIQUE (company_name),
	CONSTRAINT companies_identification_number_key UNIQUE (identification_number),
	CONSTRAINT companies_pk PRIMARY KEY (id),
	CONSTRAINT companies_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.companies(id)
);

create or replace function get_companies_subsidiaries(_identification_number varchar(256))
RETURNS TABLE (id int8, identification_number varchar(256), parent_id int8, company_name varchar(256), created_at timestamp, updated_at timestamp)
as  $$
Begin
	 RETURN QUERY EXECUTE format(
	 'WITH RECURSIVE search_tree(id, identification_number, parent_id, company_name, created_at, updated_at) AS (
	    SELECT id, identification_number, parent_id, company_name, created_at, updated_at FROM companies c  where c.identification_number = ''%s''
	  		UNION
	    SELECT c.id, c.identification_number, c.parent_id, c.company_name, c.created_at, c.updated_at
	    	FROM companies c, search_tree st
	    	WHERE c.parent_id  = st.id
		)
		SELECT * FROM search_tree ;', _identification_number);
End; $$
language 'plpgsql';